import {
	Vector2,
	TextureLoader
} from 'three';

/**
 * Custom Dither Shader
 */



const DitherShader = {

	name: 'DitherShader',

	uniforms: {

		'tDiffuse': { value: null },
		'opacity': { value: 1.0 },
        'bayer': {value: new TextureLoader().load('public/bayer.png')},
        'viewport_size': {value: new Vector2(canvas.width, canvas.height)}

	},

	vertexShader: /* glsl */`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,

	fragmentShader: /* glsl */`

		uniform float opacity;

		uniform sampler2D tDiffuse;
        uniform sampler2D bayer;
        uniform vec2 viewport_size;

		varying vec2 vUv;

		void main() {
            
			vec4 texel = texture2D( tDiffuse, vUv );

            vec4 out_color = step(texture2D(tDiffuse, vUv/8.).r, texture(bayer,vUv/viewport_size.xy));
			gl_FragColor = out_color;
		}`

};

export { DitherShader};
