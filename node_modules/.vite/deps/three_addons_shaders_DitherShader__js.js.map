{
  "version": 3,
  "sources": ["../../three/examples/jsm/shaders/DitherShader.js"],
  "sourcesContent": ["import {\n\tVector2,\n\tTextureLoader\n} from 'three';\n\n/**\n * Custom Dither Shader\n */\n\n\n\nconst DitherShader = {\n\n\tname: 'DitherShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 },\n        'bayer': {value: new TextureLoader().load('public/bayer.png')},\n        'viewport_size': {value: new Vector2(canvas.width, canvas.height)}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n        uniform sampler2D bayer;\n        uniform vec2 viewport_size;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n            \n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n            vec4 out_color = step(texture2D(tDiffuse, vUv/8.).r, texture(bayer,vUv/viewport_size.xy));\n\t\t\tgl_FragColor = out_color;\n\t\t}`\n\n};\n\nexport { DitherShader};\n"],
  "mappings": ";;;;;;AAWA,IAAM,eAAe;AAAA,EAEpB,MAAM;AAAA,EAEN,UAAU;AAAA,IAET,YAAY,EAAE,OAAO,KAAK;AAAA,IAC1B,WAAW,EAAE,OAAO,EAAI;AAAA,IAClB,SAAS,EAAC,OAAO,IAAI,cAAc,EAAE,KAAK,kBAAkB,EAAC;AAAA,IAC7D,iBAAiB,EAAC,OAAO,IAAI,QAAQ,OAAO,OAAO,OAAO,MAAM,EAAC;AAAA,EAExE;AAAA,EAEA;AAAA;AAAA,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWxB;AAAA;AAAA,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB3B;",
  "names": []
}
