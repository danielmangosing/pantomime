{
  "version": 3,
  "sources": ["../../three/examples/jsm/shaders/DitherShader.js"],
  "sourcesContent": ["/**\r\n * Custom Dither Shader\r\n */\r\n\r\nconst DitherShader = {\r\n\r\n\tname: 'DitherShader',\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'opacity': { value: 1.0 },\r\n        'bayer': {value: new THREE.TextureLoader().load('public/bayer.png')},\r\n        'viewport_size': {value: new THREE.Vector2(this.canvas.width, this.canvas.height)}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform float opacity;\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n        uniform sampler2D bayer;\r\n        uniform vec2 viewport_size;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n            \r\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n            vec4 out_color = step(texture2D(tDiffuse, vUv/8.).r, texture(bayer,vUv/viewport_size.xy));\r\n\t\t\tgl_FragColor = out_color;\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { DitherShader};\r\n"],
  "mappings": ";AAIA,IAAM,eAAe;AAAA,EAEpB,MAAM;AAAA,EAEN,UAAU;AAAA,IAET,YAAY,EAAE,OAAO,KAAK;AAAA,IAC1B,WAAW,EAAE,OAAO,EAAI;AAAA,IAClB,SAAS,EAAC,OAAO,IAAI,MAAM,cAAc,EAAE,KAAK,kBAAkB,EAAC;AAAA,IACnE,iBAAiB,EAAC,OAAO,IAAI,MAAM,QAAQ,SAAK,OAAO,OAAO,SAAK,OAAO,MAAM,EAAC;AAAA,EAExF;AAAA,EAEA;AAAA;AAAA,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWxB;AAAA;AAAA,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB3B;",
  "names": []
}
